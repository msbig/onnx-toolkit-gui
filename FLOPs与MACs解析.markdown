# FLOPs 与 MACs 解析

## 1. FLOPs 与 MACs 的区别

### MACs (乘累加运算)
MACs（Multiply–Accumulate）指一次乘法和一次加法的组合，许多工具将其视为基本运算单元进行计数。

### FLOPs (浮点运算)
FLOPs 表示浮点运算的总数。常见的换算公式为：
- **FLOPs ≈ 2 × MACs**（分别计数乘法和加法）。
- 注意：不同工具或论文的定义可能不同，有些直接将 MACs 报告为 FLOPs。例如，`onnx_tool` 通常提供 Forward_MACs，若需 FLOPs，只需乘以 2。
- 训练时需考虑反向传播，粗略估计总 FLOPs ≈ **3 × 前向 FLOPs**（仅用于量级估计）。

## 2. 分析流程（Profiler 的工作）

Profiler 分析计算复杂度的流程如下：

1. **形状推理**：
   - 从输入张量形状开始，逐节点对 ONNX 图进行形状和类型推理，得出每个运算符的输出形状（即 InShape/OutShape）。

2. **逐运算符计数**：
   - 针对每种运算符类型（op_type），根据输出尺寸、卷积核大小、通道数、分组数（groups）等参数，使用相应公式计算 MACs（或近似 FLOPs）。

3. **求和与占比**：
   - 将整个图的 MACs/FLOPs 相加得到总数（Total）。
   - 每个节点的 MACs/FLOPs 除以总数，得到占比（FPercent）。

## 3. 常见运算符的计算方式

### A. 卷积（Conv / ConvTranspose）

标准 2D 卷积（不含偏置）的计算公式：

**MACs = N × H_out × W_out × C_out × (C_in / groups) × K_h × K_w**

参数说明：
- **N**：批次大小（通常为 1）。
- **H_out, W_out**：输出高宽（由步幅、填充、膨胀率决定）。
- **C_in, C_out**：输入/输出通道数。
- **groups**：分组卷积或深度可分离卷积的分组数（深度可分离时 groups = C_in = C_out）。
- **K_h, K_w**：卷积核高宽。

**注意**：
- 偏置加法的计算量通常被忽略，因影响极小。
- **1×1 卷积**：K_h = K_w = 1，计算开销主要来自通道内积。
- **深度可分离卷积**：groups = C_in，每个输出通道仅与一个输入通道相连，显著降低计算量。
- **反卷积（ConvTranspose）**：公式与 Conv 类似，但使用对应的输出尺寸和连接关系计算。

**示例（Conv.0）**：
- 输入：1×3×960×1280
- 输出：1×32×480×640
- 卷积核：3×3，步幅=2，分组=1
- MACs = 32 × 480 × 640 × (3 × 3 × 3) = 9,830,400 × 27 = **265,420,800**（与提供的值完全一致）。

### B. 全连接 / GEMM / MatMul

对于输出矩阵形状为 M×N，中间维度为 K 的矩阵乘法：

**MACs = M × N × K**

**注意**：
- GEMM 中的转置、alpha、beta 等操作仅涉及数据重排或缩放，不影响主要计算复杂度。

### C. 池化（AveragePool / MaxPool）

**平均池化（AveragePool，精细计算）**：
- 每个输出元素需对 K_h × K_w 个值求和（K² − 1 次加法），再除以 K²（1 次除法）。
- 近似公式：**Ops ≈ N × C × H_out × W_out × K_h × K_w**

**最大池化（MaxPool）**：
- 每个输出元素是从 K² 个值中取最大值，需要 K² − 1 次比较。
- 近似公式：**Ops ≈ N × C × H_out × W_out × (K_h × K_w − 1)**

**注意**：
- 许多 Profiler 将池化计算量视为较轻（有时甚至忽略除法），因此池化在 FPercent 中的占比通常较小。

### D. 逐元素激活函数（ReLU / Sigmoid / Tanh / LeakyReLU）

- **ReLU**：每个元素 1 次比较，**Ops ≈ 元素总数**（计算量极小）。
- **Sigmoid/Tanh**：涉及 exp 等高代价运算，但为统一比较，工具常按“每元素固定运算量”近似，导致占比较低。

### E. 批归一化（BatchNormalization，推理阶段）

推理时的批归一化为线性变换：

**y = γ × (x − μ) / √(σ² + ε) + β**

**注意**：
- 计算量通常较低，近似为每元素固定运算量，类似于激活函数。